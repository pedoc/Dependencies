
configuration:
    - Release
    - Debug

# common configuration
for:

# override for tag push
-
  branches:
    only:
      - master
  
  configuration:
    - Release
    - Debug
    # - Appx

# Do not package appx on pull requests
- 
  branches:
    only:
      - /pr*/

  configuration:
    - Release
    - Debug



# Operating system (build VM template)
os:
  - Visual Studio 2022
  #- Visual Studio 2019
  #- Visual Studio 2017
  #- Visual Studio 2015
  #- Visual Studio 2013


platform:
  - x86
  - x64

artifacts:

  # old style packaging
  - path: output/Dependencies_*.zip
    name: Dependencies

  # "centennial" style packaging
  - path: "bin/**/*.appx"
  - path: "DependenciesAppx/DependenciesAppx_TemporaryKey.cer"

deploy:
  # Deploy to GitHub Releases
  - provider: GitHub
    description: "Dependencies v$(APPVEYOR_REPO_TAG_NAME)"
    artifact: Dependencies
    auth_token:
      secure: 2QjekNwJsIupEgFBXAcsfMXsJIpb0kU8ijjsEEjsGNJkW3SVf31ho4aSBnoku1y6
    draft: false
    prerelease: false
    on:
      appveyor_repo_tag: true       # deploy on tag push only

cache:
  - packages -> **\packages.config

build:
  project: C:/projects/dependencies/Dependencies.sln

environment:
  git_tag: "git tag -l --points-at HEAD" # return the tag associated with the current commit
  certsecret:
    secure: 1id6kDyNieDfYWTAnoJ/hA==

before_build:
  - ps: |
      # extracting signing cert
      # &nuget install secure-file -ExcludeVersion;
      # &secure-file/tools/secure-file -decrypt "C:/projects/dependencies/DependenciesAppx/DependenciesAppx_TemporaryKey.pfx.enc" -secret "$($env:certsecret)" -out "C:/projects/dependencies/DependenciesAppx/DependenciesAppx_TemporaryKey.pfx";
  
      # download all the necessary packages
      nuget restore 

after_test:
 - ps: |
      # remove decoded cert as soon as it is not useful anymore
      # Remove-Item -Force "C:/projects/dependencies/DependenciesAppx/DependenciesAppx_TemporaryKey.pfx"
      

test_script: # should be on_finish, but it need to be executed before artifacts is
  - ps: .\Deploy-Dependencies.ps1 
  - ps: Write-Host "Building artifact done"